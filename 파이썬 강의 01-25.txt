파이썬이란?

파이썬은 1991년 네덜란드의 수학자 '귀도 반 로섬'에 의해 개발된 프로그래밍 언어 '비단뱀'에서 유래한 로고를 볼수 있다.

구글의 많은 앱들과 인스타그램 등등의 실용적인 앱들도 파이썬으로 만들어졌다.


파이썬의 특징 

1) 인터프리터 언어이다.
   line by line 한줄씩 실행 되어 결과를 바로바로 확인할 수 있다.
(자바는 컴파일러 언어지만 하이브리드 언어임)
컴퓨터 언어는 인터프리터,컴파일러로 나뉘어져 있음

인터프리터 언어는 한줄 한줄씩 실행
컴파일러는 덩어리로 한번에 실행이 됨


2) 플랫폼에 독립적이다.
   어떠한 운영체제에서도 같은 파이썬 코드를 실행할 수 있다.
   다양한 운영체제 windows, osx, linux... 등등에서 동일한 코드로 동일한 결과를 볼수 있다.

3) 객체지향 언어이다.
    object oriented 클래스와 객체를 기반으로 하는 언어로 정보은닉,상속 등의 개념을 지원한다.

4) 동적 타이핑 
    dynamic typing 언어이다.
   프로그램 실행 중에 다른 작업을 처리할 수 있다. (멀티태스킹 가능)

5) 개발 속도가 빠르다.
    이미 완성된 많은 다양한 라이브러리, 데이터 분석 pandas, 수치연산 numpy, 시각화 matplotlib, Django ,flask 웹개발, science kit learning 딥러닝  등등 을 사용하여 빠르게 프로그램을 작성할 수 있다.


파이썬의 단점

*하드웨어 컨트롤에 약함
*앱개발 (아이폰,안드로이드) 등에는 적용하기 어렵다. 개발 못함 



#################
#주석 comment 
#################
- 사람만 읽음, 뭐에 사용하는 코드인지 설명하기 위해 주로 사용

주석은 프로그램 소스 코드에 설명을 작성한 것을 의미한다. 주석은 프로그램 실행에 전혀 영향을 끼치지 않는다. 유지 보수나 팀작업을 할때 모두가 이해하기 쉽고 의미 전달이 잘 되는 주석을 작성하는 것이 바람직하다.
파이썬에서 주석은 #으로 시작하거나 ''' ''' 삼중 따옴표(Doc String) 로 표현한다. (삼중 따옴표는 잘 안씀 왜냐하면 다른 의미도 있기 때문에, 보통 여러줄을 주석으로 사용할 때 사용한다.)

[컨트롤+ /] 여러 줄을 한번에 주석 처리 가능

파이썬은 큰따옴표 작은따옴표 동일함 그러나 섞어쓰면 안됨


#################
#변수 variable
#################

변수는 어떤 데이터를 저장할 때 사용하는 메모리 저장소(?)이다.
변수를 만들때는 = 등호 왼쪽에 변수명을 작성하고 등호 오른쪽에는 저장할 값을 작성한다.


변수명 규칙!
1. 영문, 한글, 숫자 , 밑줄로 구성된다. (변수명으로 한글을 쓰지 말자)

2. 특수문자는 사용할 수 없다.
(! @ # $ % ....) 언더바는 사용 가능

3. 대문자와 소문자를 구분한다.

4. 변수명의 첫글자는 숫자를 사용할 수 없다.

5. 예약어(print, list, dict, if, for...)는 변수명으로 사용할 수 없다.

*. 가급적이면 소문자만 사용한다.
*. 한글은 사용하지 말자.
*. 의미있는 변수명을 사용하자.


#################
#기본 자료형 type
#################

정수 int - 1, 10, 15
실수 float - 3.14 , 2.7
논리 bool - True , False
문자열 str - '홍길동'

정수 int

#################
#인덱싱 indexing
#################
문자열, 리스트, 튜플 모두 동일
몇 번째를 알려주는 고유한 번호

! 파이썬은 0에서 시작한다.

   H       E      L      L      O
   0       1      2      3      4  index
  -5      -4     -3     -2    -1


#################
#슬라이싱
#################
문자열, 리스트, 튜플 모두 동일
한문자 이상으로 구성된 단어나 문장등을 추출할때 사용한다.


#################
#출력 print()
#################

escape character 
이스케이프 문자,확장 문자
\기호 뒤에있는건 글자 취급
[\n] 줄바꿈
[\t] 일정간격 띄워줌 
[end=''] 줄 바꿈 강제 방지
[sep = ' '] 구분자 설정

%연산자 , format(), f-strings

%d decimal 정수
%f float 실수
%s string 문자열


#################
#입력 input()
#################

input 으로 입력받은 것들은 무조건 string 으로 저장됨

